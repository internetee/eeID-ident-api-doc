openapi: 3.1.0
info:
  version: 1.0.0
  title: eeID Identification Service API
  termsOfService: https://meedia.internet.ee/files/Terms_of_use_eeID.pdf
  contact:
    name: Contact our support
    email: info@internet.ee
    url: https://www.internet.ee/eis
  x-logo:
    url: https://eeid.ee/images/logo.png
    altText: eeID
  description: |
    # Introduction

    This API provides endpoints for managing authentication tokens and handling identification requests.
    The authentication mechanism is based on OAuth2, using a token-based approach to secure access to
    the identification requests. Clients must obtain a token by providing valid credentials to access
    the protected resources.

    The token has a limited lifespan and will expire after 120 seconds. Clients should handle
    token expiration and generate a new one as necessary.
servers:
  - url: https://eeid.ee
tags:
  - name: Access Token
    description: Endpoint for obtaining authentication token.
  - name: Identification Requests
    description: Endpoints for managing identification requests.
  - name: Webhook
    description: |
      A Webhook to receive notification about successful completion of created Identification Request. 
      To be able to receive notification, this API needs to be implemented and deployed by the client. 
      The webhook URL is configured by the client in the [eeID manager](https://eeid.ee) when creating the identification service and must contain the path `eeid/webhooks/identification_requests`.

      To ensure the integrity and authenticity of the request, an HMAC signature is included in the request header. Clients must verify this webhook request as follows:

      **Verifying the HMAC Signature**:
        - Upon receiving the webhook, extract the `X-HMAC-Signature` from the request headers.
        - Recreate the HMAC signature with the received payload and your `client_secret`.
        - Compare the recreated signature with the signature from the header. If they match, the request is verified as authentic.
        - Example in Ruby:
          ```ruby
          received_signature = request.headers['X-HMAC-Signature']
          expected_signature = OpenSSL::HMAC.hexdigest('SHA256', secret_key, request.raw_post)
          if received_signature != expected_signature
            raise "Invalid HMAC signature"
          end
          ```

      The event is considered acknowledged if the endpoint responds with a successful status code (`200`, `201` or `204`) within 10 seconds.
      Any other status code or a lack of response is treated as a delivery failure, leading to up to 3 retries.
      This may result in the same event being delivered multiple times in exceptional cases.
paths:
  /api/auth/v1/token:
    post:
      summary: Obtain an access token
      description: This endpoint allows clients to authenticate and receive an access token.
      operationId: createToken
      tags:
        - Access Token
      security:
        - BasicAuth: []
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Basic <Base64 encoded string>
      responses:
        '201':
          description: Token created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The access token for authentication.
                  token_type:
                    type: string
                    description: The type of token.
                    example: Bearer
                  expires_in:
                    type: integer
                    description: The duration in seconds until the token expires.
                    example: 120
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Invalid credentials
  /api/ident/v1/identification_requests:
    get:
      summary: Retrieve a list of identification requests
      description: This endpoint retrieves a paginated list of identification requests for the authenticated service.
      operationId: getIdentificationRequests
      security:
        - BearerAuth: []
      tags:
        - Identification Requests
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer <TOKEN>
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of identification requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: The current page number (zero-based index).
                    example: 0
                  page_size:
                    type: integer
                    description: The number of items per page.
                    example: 10
                  total:
                    type: integer
                    description: The total number of identification requests.
                    example: 1
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/IdentificationRequest'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: Unauthorized
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An error occurred
    post:
      summary: Create an identification request
      description: This endpoint allows a service to create a new identification request. The request must include claims required for the identification process.
      operationId: createIdentificationRequest
      security:
        - BearerAuth: []
      tags:
        - Identification Requests
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer <TOKEN>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  description: A unique reference for the identification request.
                claims_required:
                  type: array
                  description: An array of claims required for the identification process.
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |
                          The type of claim being made:
                            - `sub` - Subject - Identifier for the End-User.
                            - `name` - (optional) End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.
                        example: sub
                      value:
                        type: string
                        description: The value of the claim.
                        example: EE30303039914
              required:
                - claims_required
      responses:
        '201':
          description: Identification request created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingIdentificationRequest'
        '401':
          description: Unauthorized - Invalid or missing access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A message indicating the unauthorized access.
                    example: Unauthorized
        '422':
          description: Unprocessable Entity - Validation errors occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A message describing the validation error.
                    example: Claims required must include at least one claim of type "sub" with a non-empty value
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An error occurred
  /api/ident/v1/identification_requests/{id}:
    get:
      summary: Retrieve an identification request
      description: Fetches the details of a specific identification request by its UUID.
      operationId: getIdentificationRequest
      security:
        - BearerAuth: []
      tags:
        - Identification Requests
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer <TOKEN>
        - name: id
          in: path
          required: true
          description: The UUID of the identification request to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of the identification request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationRequest'
        '401':
          description: Unauthorized - Invalid or missing access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A message indicating the unauthorized access.
                    example: Unauthorized
        '404':
          description: Identification request not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Request not found
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An error occurred
  /api/ident/v1/identification_requests/{id}/proof_of_identity:
    get:
      summary: Retrieve proof of identity
      description: Returns the proof of identity document in PDF format for a specific identification request.
      operationId: getProofOfIdentity
      security:
        - BearerAuth: []
      tags:
        - Identification Requests
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer <TOKEN>
        - name: id
          in: path
          required: true
          description: The unique identifier of the identification request.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the proof of identity document.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        '404':
          description: Proof of identity not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Proof of identity not found
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An error occurred
webhooks:
  identificationRequestCompleted:
    post:
      summary: Identification request completed webhook
      description: Webhook triggered when an identification request is completed.
      operationId: identificationRequestCompleted
      security:
        - HMAC: []
      tags:
        - Webhook
      requestBody:
        required: true
        description: This is my test description
        content:
          application/json:
            schema:
              type: object
              properties:
                identification_request_id:
                  type: string
                  format: uuid
                  description: The unique identifier for the identification request.
                client_id:
                  type: string
                  description: The client ID associated with the request.
                  example: oidc-b8b8b8b8-c88f-1111-b11d-ecf190aa4982-72
                reference:
                  type: string
                  description: A reference string for the identification request.
                  example: '123'
              required:
                - identification_request_id
                - client_id
      responses:
        '200':
          description: Successfully processed the identification request completion.
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: |
        Clients must provide a Base64 encoded string of `client_id:client_secret` in the Authorization header, where:

        - **client_id**: The client ID provided to the identification service.
        - **client_secret**: The client secret associated with the client ID.
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    HMAC:
      type: apiKey
      in: header
      name: X-HMAC-Signature
      description: HMAC signature for securing the webhook request.
  schemas:
    IdentificationRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the identification request.
        link:
          type: string
          format: uri
          description: The link associated with the identification request.
        link_expires_at:
          type: string
          format: date-time
          description: The expiration date and time of the link.
        claims_required:
          type: array
          description: A list of claims required for the identification request.
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of claim.
                example: sub
              value:
                type: string
                description: The value of the claim.
                example: EE30303039914
        completed_at:
          type: string
          format: date-time
          description: The date and time when the request was completed.
        status:
          type: string
          description: The current status of the identification request.
          example: completed
          enum:
            - pending
            - completed
            - expired
        created_at:
          type: string
          format: date-time
          description: The date and time when the request was created.
        result:
          type: object
          description: The result of the identification request.
          properties:
            sub:
              type: string
              example: EE30303039914
            given_name:
              type: string
              example: OK
            last_name:
              type: string
              example: TESTNUMBER
        client_id:
          type: string
          description: The client ID associated with the request.
          example: oidc-b8b8b8b8-c88f-1111-b11d-ecf190aa4982-72
        reference:
          type: string
          description: A reference string for the identification request.
    PendingIdentificationRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the identification request.
        link:
          type: string
          format: uri
          description: The link associated with the identification request.
        link_expires_at:
          type: string
          format: date-time
          description: The expiration date and time of the link.
        claims_required:
          type: array
          description: A list of claims required for the identification request.
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of claim.
                example: sub
              value:
                type: string
                description: The value of the claim.
                example: EE30303039914
        completed_at:
          type: string
          format: date-time
          description: The date and time when the request was completed.
          example: null
        status:
          type: string
          description: The current status of the identification request.
          example: pending
        created_at:
          type: string
          format: date-time
          description: The date and time when the request was created.
        result:
          type: object
          description: The result of the identification request.
          example: {}
        client_id:
          type: string
          description: The client ID associated with the request.
          example: oidc-b8b8b8b8-c88f-1111-b11d-ecf190aa4982-72
        reference:
          type: string
          description: A reference string for the identification request.
